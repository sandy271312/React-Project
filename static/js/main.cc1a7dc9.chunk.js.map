{"version":3,"sources":["components/ Navbar.js","components/Alert.js","components/TextForms.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglemode","role","htmlFor","Alert","alert","style","color","backgroundColor","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForms","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","showAlert","copyText","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","about","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cc1a7dc9.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n//import { a } from 'react-router-dom'\nimport { BrowserRouter as Router, a } from \"react-router-dom\";\n\nexport default function  Navbar(props) {\n  return (\n \n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n    <div className=\"container-fluid\">\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            <a className=\"navbar-brand\" aria-current=\"page\" href=\"/\">Home</a>\n          </li>\n          {/* <li className=\"nav-item\">\n            <a className=\"nav-a\" href=\"/about\">{props.about}</a>\n          </li> */}\n        </ul>\n        {/* <form className=\"d-flex\">\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form> */}\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n        </div>\n      </div>\n    </div>\n    </nav>\n    \n  )\n}\n\nNavbar.propTypes={\n    title:PropTypes.string.isRequired,\n    about:PropTypes.string\n}\n\nNavbar.defaultProps={\n    //title:\"Set title here\",\n    about:\"Write about here\"\n\n}","import React from 'react'\n\nexport default function Alert(props) {\n\n  const capitalize=(word)=>{\n    const lower=word.toLowerCase();\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\n  }\n  \n  return (\n    props.alert &&  <div>\n      <div  className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" style={{color:'#0f5132',backgroundColor: '#d1e7dd'}}>\n       <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg} \n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\n    </div>\n    </div>\n  )\n}\n","import React,{useState} from 'react'\n\n\n\nexport default function TextForms(props) {\n  const handleUpClick =()=>{\n   // console.log(\"Uppercase was clicked\"+text);\n    //setText(\"U have clicked handle up change\");\n\n    let newText=text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted  in uppercase\",\"Success\");\n\n  }\n  const handleLowerClick =()=>{\n    // console.log(\"Uppercase was clicked\"+text);\n     //setText(\"U have clicked handle up change\");\n \n     let newText=text.toLowerCase();\n     setText(newText);\n     props.showAlert(\"Converted  in lowercase\",\"Success\");\n \n   }\n  \n  const handleCopyClick =()=>{\n   \n     var copyText=document.getElementById('myBox');\n     copyText.select();\n     \n     navigator.clipboard.writeText(copyText.value);\n     props.showAlert(\"Copied to clipboard\",\"Success\");\n\n   }\n   const handleExtraSpaceClick =()=>{\n                         let newText=text.split(/[ ]+/);\n                         setText(newText.join(\" \"));\n                         props.showAlert(\"Extra Spaces removed\",\"Success\");\n\n  }\n    const handleClearClick =()=>{\n    \n     let newText='';\n     setText(newText);\n     props.showAlert(\"Text cleard\",\"Success\");\n\n \n   }\n  const handleOnChange =(event)=>{\n   // console.log(\"OnChange\");\n    setText(event.target.value)\n\n  }\n\n  const [text, setText] = useState('');\n  return (\n    <>\n    <div className='container' style={{color:props.mode==='dark'?'white':'black'}}>\n       \n        <div className=\"mb-3\">\n        <h2>{props.heading}</h2>\n        <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handleOnChange} rows=\"8\"></textarea>\n        </div>\n        <button className='btn btn-primary mx-1' onClick={handleUpClick} >Convert to uppercase</button>\n        <button className='btn btn-primary mx-1' onClick={handleLowerClick} >Convert to lowercase</button>\n        <button className='btn btn-primary mx-1' onClick={handleCopyClick} >Copy Text</button>\n        <button className='btn btn-primary mx-1' onClick={handleExtraSpaceClick} >Remove Extra spaces</button>\n        <button className='btn btn-primary mx-1' onClick={handleClearClick} >Clear</button>\n\n        \n\n        \n\n        {/* <button className='btn btn-primary mx-1' onClick={handleSortClick} >Sort Text</button> */}\n \n       \n\n    </div>\n    <div className='container my-3' style={{color:props.mode==='dark'?'white':'black'}} >\n      <h2>Your Text Summery</h2>\n      <p>{text.length>0?text.split(\" \").length:0} words and {text.length} character</p>\n      <p>{0.008*text.split(\" \").length} minutes read</p>\n      <h2>Preview</h2>\n      <>{text.length>0 ? text:\"Enter something into the text box above to perview it here\"}</>\n\n    </div>\n    </>\n  )\n}\n","import React,{useState} from 'react';\nimport Navbar from './components/ Navbar';\n//import About from './components/About';\nimport Alert from './components/Alert';\nimport TextForms from './components/TextForms';\n//import { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nexport function App() {\n  const [mode,setMode]=useState('light');\n\nconst togglemode=()=>{\n       if(mode === 'light') {\n          setMode('dark');\n         document.body.style.backgroundColor='#042743';\n         showAlert(\"Dark Mode has been enabled\",\"success\");\n         //document.title=\"TextUtlis-Dark Mode\";//to change the title of textutils while enabling the dark mode\n        }\n\n      else{ \n         setMode('light')\n         document.body.style.backgroundColor='white';\n\n        // document.style.visibility=\"visible\";\n           showAlert(\"Light Mode has been enabled\",\"success\");\n           //document.title=\"TextUtlis-Light Mode\";//to change the title of textutils while enabling the light mode, currently I am not going to use this feature.\n        \n      }\n    }\n   const [alert,setAlert]=useState(null);\n   const showAlert=(message,type)=>{\n      setAlert({\n      msg: message,\n      type: type\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n      \n\n  return (\n    <>\n      {/* <Navbar /> */}\n      <Navbar title=\"textUtils\" mode={mode} togglemode={togglemode} about=\"About\" />\n      <Alert alert={alert}/>\n      <TextForms showAlert={showAlert} heading=\"Enter text to Analyze below\" mode={mode} />\n      {/* <Router>\n   <div className=\"container\">\n           <Routes>\n           <Route exact path=\"/\" element={<TextForms showAlert={showAlert} heading=\"Enter text to Analyze below\" mode={mode} /> }>\n            </Route>\n            <Route exact path=\"/about\" element={<About />}>\n            </Route>\n            \n          </Routes>\n        </div>\n        </Router> */}\n          \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}