{"version":3,"sources":["components/ Navbar.js","components/About.js","components/Alert.js","components/TextForms.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","onClick","togglemode","role","htmlFor","About","_useState","useState","_useState2","Object","slicedToArray","btnText","setBtnText","_useState3","color","backgroundColor","border","_useState4","myStyle","setMyStyle","style","aria-labelledby","data-bs-parent","Alert","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForms","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","showAlert","copyText","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","length","defaultProps","App","setMode","setAlert","message","setTimeout","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5950cc7d.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n//import { BrowserRouter as Router, Li, Linknk } from \"react-router-dom\";\n\nexport default function  Navbar(props) {\n  return (\n \n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n    <div className=\"container-fluid\">\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            <Link className=\"navbar-brand\" aria-current=\"page\" to=\"/\">Home</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"navbar-brand\" to=\"/about\">{props.about}</Link>\n          </li>\n        </ul>\n        {/* <form className=\"d-flex\">\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form> */}\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n        </div>\n      </div>\n    </div>\n    </nav>\n    \n  )\n}\n\nNavbar.propTypes={\n    title:PropTypes.string.isRequired,\n    about:PropTypes.string\n}\n\nNavbar.defaultProps={\n    //title:\"Set title here\",\n    about:\"Write about here\"\n\n}","import React,{useState} from 'react'\n\nexport default function About() {\n    const [btnText,setBtnText]=useState(\"Enable Dark Mode\")\n    const [myStyle, setMyStyle]=useState({\n                                          color:'black',\n                                          backgroundColor:'white',\n                                          border :'1px solid white'\n    })\n    \n    const toogleStyle=()=>{\n        if(myStyle.color ==='white')\n         {\n             setMyStyle({\n                color:'black',\n                backgroundColor:'white'\n             })\n             setBtnText(\"Enable Dark Mode\")\n         }\n         else \n         {\n             setMyStyle(\n                 {color:'white',\n                 backgroundColor:'black'}\n             )\n             setBtnText(\"Enable light Mode\")\n         } \n\n    }\n\n    \n\n\n  return (\n    <div className='container my-2' style={myStyle}>\n        <h1>About Us</h1>\n\n    <div className=\"accordion\" id=\"accordionExample\">\n    <div className=\"accordion-item\">\n        <h2 className=\"accordion-header\" id=\"headingOne\">\n        <button className=\"accordion-button\"  style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n            Accordion Item #1\n        </button>\n        </h2>\n        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n        <div className=\"accordion-body\" style={myStyle}>\n            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n        </div>\n        </div>\n    </div>\n    <div className=\"accordion-item\">\n        <h2 className=\"accordion-header\" id=\"headingTwo\">\n        <button className=\"accordion-button collapsed\"  style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n            Accordion Item #2\n        </button>\n        </h2>\n        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n        <div className=\"accordion-body\" style={myStyle}>\n            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n        </div>\n        </div>\n    </div>\n    <div className=\"accordion-item\">\n        <h2 className=\"accordion-header\" id=\"headingThree\">\n        <button className=\"accordion-button collapsed\" type=\"button\"  style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n            Accordion Item #3\n        </button>\n        </h2>\n        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n        <div className=\"accordion-body\" style={myStyle}>\n            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n        </div>\n        </div>\n  </div>\n</div>\n\n  <div className='container my-2'>\n  <button className='btn btn-primary' onClick={toogleStyle} >{btnText}</button>\n  </div>\n  </div>\n  )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n\n  const capitalize=(word)=>{\n    const lower=word.toLowerCase();\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\n  }\n  \n  return (\n    props.alert &&  <div>\n      <div  className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" style={{color:'#0f5132',backgroundColor: '#d1e7dd'}}>\n       <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg} \n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\n    </div>\n    </div>\n  )\n}\n","import React,{useState} from 'react'\n\n\n\nexport default function TextForms(props) {\n  const handleUpClick =()=>{\n   // console.log(\"Uppercase was clicked\"+text);\n    //setText(\"U have clicked handle up change\");\n\n    let newText=text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted  in uppercase\",\"Success\");\n\n  }\n  const handleLowerClick =()=>{\n    // console.log(\"Uppercase was clicked\"+text);\n     //setText(\"U have clicked handle up change\");\n \n     let newText=text.toLowerCase();\n     setText(newText);\n     props.showAlert(\"Converted  in lowercase\",\"Success\");\n \n   }\n  \n  const handleCopyClick =()=>{\n   \n     var copyText=document.getElementById('myBox');\n     copyText.select();\n     \n     navigator.clipboard.writeText(copyText.value);\n     props.showAlert(\"Copied to clipboard\",\"Success\");\n\n   }\n   const handleExtraSpaceClick =()=>{\n                         let newText=text.split(/[ ]+/);\n                         setText(newText.join(\" \"));\n                         props.showAlert(\"Extra Spaces removed\",\"Success\");\n\n  }\n    const handleClearClick =()=>{\n    \n     let newText='';\n     setText(newText);\n     props.showAlert(\"Text cleard\",\"Success\");\n\n \n   }\n  const handleOnChange =(event)=>{\n   // console.log(\"OnChange\");\n    setText(event.target.value)\n\n  }\n\n  const [text, setText] = useState('');\n  return (\n    <>\n    <div className='container' style={{color:props.mode==='dark'?'white':'black'}}>\n       \n        <div className=\"mb-3\">\n        <h2>{props.heading}</h2>\n        <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handleOnChange} rows=\"8\"></textarea>\n        </div>\n        <button className='btn btn-primary mx-1 my-1' onClick={handleUpClick} >Convert to uppercase</button>\n        <button className='btn btn-primary mx-1 my-1' onClick={handleLowerClick} >Convert to lowercase</button>\n        <button className='btn btn-primary mx-1 my-1' onClick={handleCopyClick} >Copy Text</button>\n        <button className='btn btn-primary mx-1 my-1' onClick={handleExtraSpaceClick} >Remove Extra spaces</button>\n        <button className='btn btn-primary mx-1 my-1' onClick={handleClearClick} >Clear</button>\n\n        \n\n        \n\n        {/* <button className='btn btn-primary mx-1' onClick={handleSortClick} >Sort Text</button> */}\n \n       \n\n    </div>\n    <div className='container my-3' style={{color:props.mode==='dark'?'white':'black'}} >\n      <h2>Your Text Summery</h2>\n      <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} character</p>\n      <p>{0.008*text.split(\" \").length} minutes read</p>\n      <h2>Preview</h2>\n      <>{text.length>0 ? text:\"Enter something into the text box above to perview it here\"}</>\n\n    </div>\n    </>\n  )\n}\n","import React,{useState} from 'react';\nimport Navbar from './components/ Navbar';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport TextForms from './components/TextForms';\nimport { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nexport function App() {\n  const [mode,setMode]=useState('light');\n\nconst togglemode=()=>{\n       if(mode === 'light') {\n          setMode('dark');\n         document.body.style.backgroundColor='#042743';\n         showAlert(\"Dark Mode has been enabled\",\"success\");\n         //document.title=\"TextUtlis-Dark Mode\";//to change the title of textutils while enabling the dark mode\n        }\n\n      else{ \n         setMode('light')\n         document.body.style.backgroundColor='white';\n\n        // document.style.visibility=\"visible\";\n           showAlert(\"Light Mode has been enabled\",\"success\");\n           //document.title=\"TextUtlis-Light Mode\";//to change the title of textutils while enabling the light mode, currently I am not going to use this feature.\n        \n      }\n    }\n   const [alert,setAlert]=useState(null);\n   const showAlert=(message,type)=>{\n      setAlert({\n      msg: message,\n      type: type\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n      \n\n  return (\n    <>\n      {/* <Navbar /> */}\n      \n      {/* <TextForms showAlert={showAlert} heading=\"Enter text to Analyze below\" mode={mode} /> */}\n      <Router>\n      <Navbar title=\"textUtils\" mode={mode} togglemode={togglemode} about=\"About\" />\n      <Alert alert={alert}/>\n   <div className=\"container\">\n           <Routes>\n           <Route exact path=\"/\" element={<TextForms showAlert={showAlert} heading=\"Enter text to Analyze below\" mode={mode} /> }>\n            </Route>\n            <Route exact path=\"/about\" element={<About />}>\n            </Route>\n            \n          </Routes>\n        </div>\n        </Router>\n          \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}